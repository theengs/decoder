name: Build

on:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - uses: pre-commit/action@v3.0.0
  gcc:
    name: GCC
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - gcc: "4.6"
          - gcc: "4.7"
          - gcc: "4.8"
          - gcc: "4.9"
          - gcc: "5"
          - gcc: "6"
          - gcc: "7"
            cxxflags: -fsanitize=leak -fno-sanitize-recover=all
          - gcc: "8"
            cxxflags: -fsanitize=undefined -fno-sanitize-recover=all
          - gcc: "9"
            cxxflags: -fsanitize=address -fno-sanitize-recover=all
          - gcc: "10"
          - gcc: "11"
    steps:
      - name: Install
        run: |
          sudo add-apt-repository -yn 'deb http://archive.ubuntu.com/ubuntu/ trusty main'
          sudo add-apt-repository -yn 'deb http://archive.ubuntu.com/ubuntu/ trusty universe'
          sudo add-apt-repository -yn 'deb http://archive.ubuntu.com/ubuntu/ xenial main'
          sudo add-apt-repository -yn 'deb http://archive.ubuntu.com/ubuntu/ xenial universe' 
          sudo add-apt-repository -yn 'deb http://archive.ubuntu.com/ubuntu/ bionic main'
          sudo add-apt-repository -yn 'deb http://archive.ubuntu.com/ubuntu/ bionic universe'
          sudo apt-get update
          sudo apt-get install -y gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure
        run: cmake -DCMAKE_BUILD_TYPE=Debug .
        env:
          CC: gcc-${{ matrix.gcc }}
          CXX: g++-${{ matrix.gcc }}
          CXXFLAGS: ${{ matrix.cxxflags }}
      - name: Build
        run: cmake --build .
      - name: Test
        run: ctest --output-on-failure -V -C Debug .
        env:
          UBSAN_OPTIONS: print_stacktrace=1

  clang:
    name: Clang
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - clang: "3.5"
            cxxflags: "-stdlib=libc++"
          - clang: "3.6"
            cxxflags: "-stdlib=libc++"
          - clang: "3.7"
            cxxflags: "-stdlib=libc++"
          - clang: "3.8"
            cxxflags: "-stdlib=libc++"
          - clang: "3.9"
            cxxflags: "-stdlib=libc++"
          - clang: "4.0"
            cxxflags: "-stdlib=libc++"
          - clang: "5.0"
          - clang: "6.0"
          - clang: "7"
          - clang: "8"
            cxxflags: -fsanitize=leak -fno-sanitize-recover=all
          - clang: "9"
            cxxflags: -fsanitize=undefined -fno-sanitize-recover=all
          - clang: "10"
            cxxflags: -fsanitize=address -fno-sanitize-recover=all
    steps:
      - name: Install
        run: |
          sudo add-apt-repository -yn 'deb http://archive.ubuntu.com/ubuntu/ trusty main'
          sudo add-apt-repository -yn 'deb http://archive.ubuntu.com/ubuntu/ trusty universe'
          sudo add-apt-repository -yn 'deb http://archive.ubuntu.com/ubuntu/ xenial main'
          sudo add-apt-repository -yn 'deb http://archive.ubuntu.com/ubuntu/ xenial universe' 
          sudo add-apt-repository -yn 'deb http://archive.ubuntu.com/ubuntu/ bionic main'
          sudo add-apt-repository -yn 'deb http://archive.ubuntu.com/ubuntu/ bionic universe' 
          sudo apt-get update
          sudo apt-get install -y clang-${{ matrix.clang }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure
        run: cmake -DCMAKE_BUILD_TYPE=Debug .
        env:
          CC: clang-${{ matrix.clang }}
          CXX: clang++-${{ matrix.clang }}
          CXXFLAGS: >-
            ${{ matrix.cxxflags }}
            ${{ contains(matrix.cxxflags, 'libc++') && '-I/usr/lib/llvm-10/include/c++/v1/' || '' }}
      - name: Build
        run: cmake --build .
      - name: Test
        run: ctest --output-on-failure -V -C Debug .
        env:
          UBSAN_OPTIONS: print_stacktrace=1

  xcode:
    name: XCode
    needs: clang
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        include:
          - xcode: "14.2"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Select XCode version
        run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app
      - name: Configure
        run: cmake -DCMAKE_BUILD_TYPE=Debug .
      - name: Build
        run: cmake --build .
      - name: Test
        run: ctest --output-on-failure -V -C Debug .

  msvc:
    name: Visual Studio
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2016
          - os: windows-2019
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure
        run: cmake -DCMAKE_BUILD_TYPE=Debug .
      - name: Build
        run: cmake --build .
      - name: Test
        run: ctest --output-on-failure -V -C Debug .

  
